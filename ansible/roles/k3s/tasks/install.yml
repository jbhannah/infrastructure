---
- name: Set k3s base path
  set_fact:
    k3s_install_base: "{{ k3s_install_bin_dir }}/{{ k3s_install_name | default('k3s', true) }}"

- name: Get k3s installation script
  become: true
  get_url:
    url: https://get.k3s.io
    dest: "{{ k3s_install_base }}-install.sh"
    mode: 0755
    owner: root
    group: root
  register: k3s_install_script

- name: Check for current k3s installation
  stat:
    path: "{{ k3s_install_base }}"
  register: k3s_current_install

- name: Get current k3s version
  shell: "{{ k3s_install_base }} --version | head -n1 | awk -F' ' '{ print $3 }'"
  register: k3s_current_version
  when: k3s_current_install.stat.exists
  changed_when: k3s_current_version.stdout != k3s_version

- name: Create configuration directory
  become: true
  ansible.builtin.file:
    path: "{{ k3s_config_dir }}"
    state: directory
    owner: root
    group: root

- name: Copy configuration file
  become: true
  ansible.builtin.template:
    src: config.yaml.j2
    dest: "{{ k3s_config_dir }}/config.yaml"
    owner: root
    group: root
  notify: Restart k3s

- name: Run k3s installation script
  become: true
  command: k3s-install.sh
  environment:
    INSTALL_K3S_VERSION: "{{ k3s_version }}"
    INSTALL_K3S_BIN_DIR: "{{ k3s_install_bin_dir }}"
    INSTALL_K3S_SYSTEMD_DIR: "{{ k3s_install_systemd_dir }}"
    INSTALL_K3S_EXEC: >
      {{ k3s_command }}
      {% if k3s_cluster_init %}
        --cluster-init
      {% endif %}
    INSTALL_K3S_NAME: "{{ k3s_install_name | default('', true) }}"
    INSTALL_K3S_TYPE: "{{ k3s_install_type | default('', true) }}"
  when: k3s_install_script.changed or k3s_current_version.changed or not k3s_current_install.stat.exists
  notify: Restart k3s

- name: Throttle k3s server and agent processes
  vars:
    params:
      CPUQuota: 30%
      CPUQuotaPeriodSec: 50ms
      CPUWeight: 20
  community.general.ini_file:
    path: "{{ k3s_install_systemd_dir }}/{{ k3s_install_name | default('k3s', true) }}{{ '-agent' if k3s_command == 'agent' else '' }}.service"
    section: Service
    option: "{{ item.key }}"
    value: "{{ item.value }}"
  become: true
  loop: "{{ params | dict2items }}"
  notify: Restart k3s

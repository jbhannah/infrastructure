---
apiVersion: helm.cattle.io/v1
kind: HelmChart
metadata:
  name: external-dns
  namespace: kube-system
spec:
  repo: https://kubernetes-sigs.github.io/external-dns/
  chart: external-dns
  version: 1.2.0
  targetNamespace: kube-system
  valuesContent: |-
    env:
      - name: CF_API_TOKEN
        valueFrom:
          secretKeyRef:
            name: cloudflare
            key: cloudflare_api_token
    fqdnTemplate: "{{name}}.hannahs.family"
    metrics:
      enabled: true
      podAnnotations: {}
      serviceMonitor:
        enabled: true
    provider: cloudflare
    resources:
      requests:
        cpu: 10m
        memory: 32Mi
    sources:
      - service
      - ingress
      - crd
    txtOwnerId: legendaries.hannahs.family

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.5.0
    api-approved.kubernetes.io: "https://github.com/kubernetes-sigs/external-dns/pull/2007"
  name: dnsendpoints.externaldns.k8s.io
spec:
  group: externaldns.k8s.io
  names:
    kind: DNSEndpoint
    listKind: DNSEndpointList
    plural: dnsendpoints
    singular: dnsendpoint
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          properties:
            apiVersion:
              description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
              type: string
            kind:
              description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
              type: string
            metadata:
              type: object
            spec:
              description: DNSEndpointSpec defines the desired state of DNSEndpoint
              properties:
                endpoints:
                  items:
                    description: Endpoint is a high-level way of a connection between a service and an IP
                    properties:
                      dnsName:
                        description: The hostname of the DNS record
                        type: string
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels stores labels defined for the Endpoint
                        type: object
                      providerSpecific:
                        description: ProviderSpecific stores provider specific config
                        items:
                          description: ProviderSpecificProperty holds the name and value of a configuration which is specific to individual DNS providers
                          properties:
                            name:
                              type: string
                            value:
                              type: string
                          type: object
                        type: array
                      recordTTL:
                        description: TTL for the record
                        format: int64
                        type: integer
                      recordType:
                        description: RecordType type of record, e.g. CNAME, A, SRV, TXT etc
                        type: string
                      setIdentifier:
                        description: Identifier to distinguish multiple records with the same name and type (e.g. Route53 records with routing policies other than 'simple')
                        type: string
                      targets:
                        description: The targets the DNS record points to
                        items:
                          type: string
                        type: array
                    type: object
                  type: array
              type: object
            status:
              description: DNSEndpointStatus defines the observed state of DNSEndpoint
              properties:
                observedGeneration:
                  description: The generation observed by the external-dns controller.
                  format: int64
                  type: integer
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: external-dns
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: external-dns
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: external-dns
    app.kubernetes.io/version: 0.9.0
    helm.sh/chart: external-dns-1.2.0
  name: external-dns-crd
rules:
  - apiGroups: ["externaldns.k8s.io"]
    resources: ["dnsendpoints"]
    verbs: ["get", "watch", "list"]
  - apiGroups: ["externaldns.k8s.io"]
    resources: ["dnsendpoints/status"]
    verbs: ["*"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: external-dns
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: external-dns
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: external-dns
    app.kubernetes.io/version: 0.9.0
    helm.sh/chart: external-dns-1.2.0
  name: external-dns-crd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: external-dns-crd
subjects:
  - kind: ServiceAccount
    name: external-dns
    namespace: kube-system

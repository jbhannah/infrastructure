---
apiVersion: helm.cattle.io/v1
kind: HelmChart
metadata:
  name: kube-prometheus-stack
  namespace: kube-system
spec:
  repo: https://prometheus-community.github.io/helm-charts
  chart: kube-prometheus-stack
  version: 15.4.4
  targetNamespace: monitoring
  valuesContent: |-
    alertmanager:
      alertmanagerSpec:
        externalUrl: https://alerts.monitoring.hannahs.family
    defaultRules:
      rules:
        etcd: false
        kubeApiserverSlos: false
    fullnameOverride: kps
    grafana:
      enabled: false
    kubeControllerManager:
      endpoints:
        - 172.17.3.17
        - 172.17.3.18
        - 172.17.3.122
    kubeEtcd:
      enabled: false
    kubeProxy:
      endpoints:
        - 172.17.3.17
        - 172.17.3.18
        - 172.17.3.19
        - 172.17.3.20
        - 172.17.3.120
        - 172.17.3.121
        - 172.17.3.122
    kubeScheduler:
      endpoints:
        - 172.17.3.17
        - 172.17.3.18
        - 172.17.3.122
    prometheus:
      thanosService:
        enabled: true
      prometheusSpec:
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              - labelSelector:
                  matchLabels:
                    app: prometheus
                    prometheus: kps-prometheus
                topologyKey: kubernetes.io/hostname
        externalUrl: https://prometheus.monitoring.hannahs.family
        podMonitorSelectorNilUsesHelmValues: false
        probeSelectorNilUsesHelmValues: false
        resources:
          requests:
            cpu: 500m
            memory: 2Gi
          limits:
            cpu: 2
            memory: 6Gi
        ruleSelectorNilUsesHelmValues: false
        serviceMonitorSelectorNilUsesHelmValues: false
        shards: 4
        storageSpec:
          emptyDir: {}
        thanos:
          image: quay.io/thanos/thanos:v0.20.1
          version: v0.20.1
          objectStorageConfig:
            name: thanos-objstore
            key: objstore.yml
        walCompression: true

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: kps-prometheus
  namespace: monitoring
  annotations:
    kubernetes.io/tls-acme: "true"
    traefik.ingress.kubernetes.io/router.entrypoints: web,websecure
    traefik.ingress.kubernetes.io/router.middlewares: kube-system-oauth2-proxy-forward-auth@kubernetescrd
spec:
  tls:
    - hosts:
        - &hostname prometheus.monitoring.hannahs.family
      secretName: *hostname
  rules:
    - host: *hostname
      http:
        paths:
          - pathType: Prefix
            path: /
            backend:
              service:
                name: kps-prometheus
                port:
                  name: web

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: kps-alertmanager
  namespace: monitoring
  annotations:
    kubernetes.io/tls-acme: "true"
    traefik.ingress.kubernetes.io/router.entrypoints: web,websecure
    traefik.ingress.kubernetes.io/router.middlewares: kube-system-oauth2-proxy-forward-auth@kubernetescrd
spec:
  tls:
    - hosts:
        - &hostname alerts.monitoring.hannahs.family
      secretName: *hostname
  rules:
    - host: *hostname
      http:
        paths:
          - pathType: Prefix
            path: /
            backend:
              service:
                name: kps-alertmanager
                port:
                  name: web

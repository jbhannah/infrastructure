---
apiVersion: helm.cattle.io/v1
kind: HelmChart
metadata:
  name: kube-prometheus-stack
  namespace: monitoring
spec:
  repo: https://prometheus-community.github.io/helm-charts
  chart: kube-prometheus-stack
  version: 20.0.1
  targetNamespace: monitoring
  valuesContent: |-
    alertmanager:
      alertmanagerSpec:
        affinity: &affinity
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              - labelSelector:
                  matchLabels:
                    app: prometheus
                    prometheus: kps-prometheus
                topologyKey: kubernetes.io/hostname
        externalUrl: https://alerts.monitoring.hannahs.family
      config:
        route:
          routes:
            - match:
                alertname: Watchdog
              receiver: autocode
              continue: false
              group_wait: 0s
              group_interval: 1m
              repeat_interval: 14m
        receivers:
          - name: "null"
          - name: autocode
            webhook_configs:
              - url: https://jbhannah.api.stdlib.com/pagerduty-alertmanager-watchdog@1.1.0/watchdog/
                send_resolved: false
    defaultRules:
      rules:
        etcd: false
        kubeApiserver: false
        kubeApiserverAvailability: false
        kubeApiserverError: false
        kubeApiserverSlos: false
    fullnameOverride: kps
    grafana:
      enabled: false
    kubeControllerManager:
      endpoints:
        - 172.17.3.122
      service:
        enabled: true
        port: 10257
        targetPort: 10257
      serviceMonitor:
        https: true
        insecureSkipVerify: true
        serverName: 127.0.0.1
    kubeEtcd:
      enabled: false
    kubeProxy:
      endpoints:
        - 172.17.3.17
        - 172.17.3.18
        - 172.17.3.19
        - 172.17.3.20
        - 172.17.3.120
        - 172.17.3.121
        - 172.17.3.122
    kubeScheduler:
      endpoints:
        - 172.17.3.122
    nodeExporter:
      serviceMonitor:
        relabelings:
          - action: replace
            regex: (.*)
            replacement: $1
            sourceLabels:
              - __meta_kubernetes_pod_node_name
            targetLabel: node
    prometheus:
      prometheusSpec:
        externalUrl: https://prometheus.monitoring.hannahs.family
        podMonitorSelectorNilUsesHelmValues: false
        probeSelectorNilUsesHelmValues: false
        resources:
          requests:
            cpu: 500m
            memory: 2Gi
          limits:
            cpu: 2
            memory: 6Gi
        ruleSelectorNilUsesHelmValues: false
        serviceMonitorSelectorNilUsesHelmValues: false
        storageSpec:
          volumeClaimTemplate:
            spec:
              accessModes: ["ReadWriteOnce"]
              resources:
               requests:
                 storage: 50Gi
        walCompression: true
    prometheusOperator:
      admissionWebhooks:
        certManager:
          enabled: true
          issuerRef:
            name: internal-ca
            kind: ClusterIssuer
        failurePolicy: Ignore
        patch:
          enabled: false

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: kps-prometheus
  namespace: monitoring
  annotations:
    kubernetes.io/tls-acme: "true"
    traefik.ingress.kubernetes.io/router.entrypoints: web,websecure
    traefik.ingress.kubernetes.io/router.middlewares: kube-system-oauth2-proxy-forward-auth@kubernetescrd
spec:
  tls:
    - hosts:
        - &hostname prometheus.monitoring.hannahs.family
      secretName: *hostname
  rules:
    - host: *hostname
      http:
        paths:
          - pathType: Prefix
            path: /
            backend:
              service:
                name: kps-prometheus
                port:
                  name: web

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: kps-alertmanager
  namespace: monitoring
  annotations:
    kubernetes.io/tls-acme: "true"
    traefik.ingress.kubernetes.io/router.entrypoints: web,websecure
    traefik.ingress.kubernetes.io/router.middlewares: kube-system-oauth2-proxy-forward-auth@kubernetescrd
spec:
  tls:
    - hosts:
        - &hostname alerts.monitoring.hannahs.family
      secretName: *hostname
  rules:
    - host: *hostname
      http:
        paths:
          - pathType: Prefix
            path: /
            backend:
              service:
                name: kps-alertmanager
                port:
                  name: web

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-datasource-prometheus
  namespace: monitoring
  labels:
    grafana.com/datasource: prometheus
data:
  kps-prometheus.yml: |
    apiVersion: 1
    datasources:
      - name: Prometheus
        type: prometheus
        url: http://kps-prometheus:9090
        access: proxy
        isDefault: true
